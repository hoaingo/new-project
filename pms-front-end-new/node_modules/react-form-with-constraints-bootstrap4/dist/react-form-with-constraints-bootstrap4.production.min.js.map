{"version":3,"file":"react-form-with-constraints-bootstrap4.production.min.js","sources":["../src/Bootstrap4.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  Input, FormWithConstraintsChildContext,\n  FieldFeedbacks as FieldFeedbacks_, FieldFeedbacksProps\n} from 'react-form-with-constraints';\n\nexport interface FormGroupProps extends React.HTMLAttributes<HTMLDivElement> {\n  for?: string;\n}\n\nexport class FormGroup extends React.Component<FormGroupProps> {\n  static contextTypes = {\n    form: PropTypes.object.isRequired\n  };\n  context: FormWithConstraintsChildContext;\n\n  constructor(props: FormGroupProps) {\n    super(props);\n    this.reRender = this.reRender.bind(this);\n  }\n\n  componentWillMount() {\n    this.context.form.addValidateEventListener(this.reRender);\n  }\n\n  componentWillUnmount() {\n    this.context.form.removeValidateEventListener(this.reRender);\n  }\n\n  reRender(input: Input) {\n    const fieldName = this.props.for;\n    if (input.name === fieldName) { // Ignore the event if it's not for us\n      this.forceUpdate();\n    }\n  }\n\n  className(fieldName: string | undefined) {\n    let className = 'form-group';\n    if (fieldName !== undefined) {\n      const form = this.context.form;\n      if (form.fieldsStore.containErrors(fieldName)) {\n        className += ' has-danger';\n      }\n      else if (form.fieldsStore.containWarnings(fieldName)) {\n        className += ' has-warning';\n      }\n      else if (form.fieldsStore.areValidDirtyWithoutWarnings(fieldName)) {\n        className += ' has-success';\n      }\n    }\n    return className;\n  }\n\n  render() {\n    const { for: fieldName, className, children, ...divProps } = this.props;\n    const classes = className !== undefined ? `${className} ${this.className(fieldName)}` : this.className(fieldName);\n    return (\n      <div {...divProps} className={classes}>{children}</div>\n    );\n  }\n}\n\n\nexport interface FormControlLabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {}\n\nconst FormControlLabel: React.SFC<FormControlLabelProps> = props => {\n  const { className, children, ...labelProps } = props;\n  const classes = className !== undefined ? `${className} form-control-label` : 'form-control-label';\n  return (\n    <label {...labelProps} className={classes}>{children}</label>\n  );\n};\nexport { FormControlLabel };\n\n\nexport interface FormControlInputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  innerRef?: React.Ref<HTMLInputElement>;\n}\n\nexport class FormControlInput extends React.Component<FormControlInputProps> {\n  static contextTypes = {\n    form: PropTypes.object.isRequired\n  };\n  context: FormWithConstraintsChildContext;\n\n  constructor(props: FormControlInputProps) {\n    super(props);\n    this.reRender = this.reRender.bind(this);\n  }\n\n  componentWillMount() {\n    this.context.form.addValidateEventListener(this.reRender);\n  }\n\n  componentWillUnmount() {\n    this.context.form.removeValidateEventListener(this.reRender);\n  }\n\n  reRender(input: Input) {\n    const fieldName = this.props.name;\n    if (input.name === fieldName) { // Ignore the event if it's not for us\n      this.forceUpdate();\n    }\n  }\n\n  className(name: string | undefined) {\n    let className = 'form-control';\n    if (name !== undefined) {\n      const form = this.context.form;\n      if (form.fieldsStore.containErrors(name)) {\n        className += ' form-control-danger';\n      }\n      else if (form.fieldsStore.containWarnings(name)) {\n        className += ' form-control-warning';\n      }\n      else if (form.fieldsStore.areValidDirtyWithoutWarnings(name)) {\n        className += ' form-control-success';\n      }\n    }\n    return className;\n  }\n\n  render() {\n    const { innerRef, className, children, ...inputProps } = this.props;\n    const classes = className !== undefined ? `${className} ${this.className(inputProps.name)}` : this.className(inputProps.name);\n    return (\n      <input ref={innerRef} {...inputProps} className={classes} />\n    );\n  }\n}\n\n\nconst FieldFeedbacks: React.SFC<FieldFeedbacksProps> = props => {\n  const { className, children, ...other } = props;\n  const classes = className !== undefined ? `${className} form-control-feedback` : 'form-control-feedback';\n  return <FieldFeedbacks_ {...other} className={classes}>{children}</FieldFeedbacks_>;\n};\nexport { FieldFeedbacks };\n\n\nexport interface LabelWithFormControlStyleProps extends React.LabelHTMLAttributes<HTMLLabelElement> {\n  for: string[];\n}\n\nexport class LabelWithFormControlStyle extends React.Component<LabelWithFormControlStyleProps> {\n  static contextTypes = {\n    form: PropTypes.object.isRequired\n  };\n  context: FormWithConstraintsChildContext;\n\n  constructor(props: LabelWithFormControlStyleProps) {\n    super(props);\n    this.reRender = this.reRender.bind(this);\n  }\n\n  componentWillMount() {\n    this.context.form.addValidateEventListener(this.reRender);\n  }\n\n  componentWillUnmount() {\n    this.context.form.removeValidateEventListener(this.reRender);\n  }\n\n  reRender(input: Input) {\n    const fieldNames = this.props.for;\n    if (fieldNames.includes(input.name)) { // Ignore the event if it's not for us\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    const { for: fieldNames, style, children, ...labelProps } = this.props;\n    const form = this.context.form;\n\n    // See https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/scss/_variables.scss#L118\n    const brandDanger = '#d9534f';\n    const brandWarning = '#f0ad4e';\n    const brandSuccess = '#5cb85c';\n\n    let color: string | undefined;\n    if (form.fieldsStore.containErrors(...fieldNames)) {\n      color = brandDanger;\n    }\n    else if (form.fieldsStore.containWarnings(...fieldNames)) {\n      color = brandWarning;\n    }\n    else if (form.fieldsStore.areValidDirtyWithoutWarnings(...fieldNames)) {\n      color = brandSuccess;\n    }\n\n    const styles = style !== undefined ? {color, ...style} : {color};\n\n    return (\n      <label {...labelProps} style={styles}>{children}</label>\n    );\n  }\n}\n"],"names":["props","_super","_this","reRender","bind","tslib_1.__extends","FormGroup","this","context","form","addValidateEventListener","removeValidateEventListener","input","fieldName","for","name","forceUpdate","className","undefined","fieldsStore","containErrors","containWarnings","areValidDirtyWithoutWarnings","_a","children","divProps","classes","React.createElement","PropTypes.object","isRequired","React.Component","FormControlInput","innerRef","inputProps","ref","LabelWithFormControlStyle","includes","color","fieldNames","style","labelProps","_b","_c","_d","styles","other","FieldFeedbacks_"],"mappings":"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"}